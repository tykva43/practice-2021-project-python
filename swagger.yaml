swagger: '2.0'
info:
  title: Budget Organizer API
  description: This page explains how to use the API
  termsOfService: https://www.google.com/policies/terms/
  contact:
    email: krikunova.olga@mail.ru
  license:
    name: BSD License
  version: v1
host: 0.0.0.0:8000
schemes:
  - http
basePath: /api
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
   JWT:
     type: apiKey
     name: Authorization
     in: header
paths:
  /budget/category/:
    get:
      security:
        - JWT: []
      operationId: budget_category_list
      summary: "Return all current user's categories"
      description: ''
      parameters:
        - name: start_date
          in: query
          description: ''
          required: false
          type: string
        - name: end_date
          in: query
          description: ''
          required: false
          type: string
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/TransactionCategoryList'
      tags:
        - budget
    post:
      security:
        - JWT: []
      operationId: budget_category_create
      summary: "Create category for transaction"
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TransactionCategoryCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TransactionCategoryCreate'
      tags:
        - budget
    parameters: []
  /budget/category/total_amount/:
    get:
      security:
        - JWT: []
      operationId: budget_category_total_amount
      summary: "Get total amount spent for each category"
      description: ''
      parameters:
        - name: start_date
          in: query
          description: ''
          required: false
          type: string
        - name: end_date
          in: query
          description: ''
          required: false
          type: string
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/TransactionCategorySums'
      tags:
        - budget
    parameters: []
  /budget/category/{id}/:
    delete:
      security:
        - JWT: []
      operationId: budget_category_delete
      description: ''
      summary: "Delete category"
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - budget
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /budget/transaction/:
    get:
      security:
        - JWT: []
      operationId: budget_transaction_list
      summary: "Get current user's transaction list"
      description: ''
      parameters:
        - name: start_date
          in: query
          description: ''
          required: false
          type: string
        - name: end_date
          in: query
          description: ''
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/TransactionList'
      tags:
        - budget
    post:
      security:
        - JWT: []
      operationId: budget_transaction_create
      description: ''
      summary: "Create transaction"
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Transaction'
      tags:
        - budget
    parameters: []
  /budget/transaction/global_data/:
    get:
      security:
        - JWT: []
      operationId: budget_transaction_global_data
      description: 'It returns the total amount spent for each category type over a given period of time.'
      summary: "Return global transaction data"
      parameters:
        - name: start_date
          in: query
          description: ''
          required: false
          type: string
        - name: end_date
          in: query
          description: ''
          required: false
          type: string
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
        - name: page_size
          in: query
          description: Number of results to return per page.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/TransactionGlobal'
      tags:
        - budget
    parameters: []
  /budget/transaction/{id}/:
    put:
      security:
        - JWT: []
      operationId: budget_transaction_update
      description: ''
      summary: "Update transaction"
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Transaction'
      tags:
        - budget
    patch:
      security:
        - JWT: []
      operationId: budget_transaction_partial_update
      summary: "Partial update transaction"
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Transaction'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Transaction'
      tags:
        - budget
    delete:
      security:
        - JWT: []
      operationId: budget_transaction_delete
      summary: "Delete transaction"
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - budget
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /token/:
    post:
      operationId: token_create
      summary: "Get token"
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenObtainPair'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenObtainPair'
      tags:
        - token
    parameters: []
  /token/refresh/:
    post:
      operationId: token_refresh_create
      summary: 'Refresh token'
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenRefresh'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenRefresh'
      tags:
        - token
    parameters: []
  /users/me/:
    get:
      security:
        - JWT: []
      operationId: users_me_read
      description: ''
      summary: 'Get user info'
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/UserInfo'
      tags:
        - users
    parameters: []
  /users/registration/:
    post:
      operationId: users_registration_create
      description: ''
      summary: 'Create user'
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - users
    parameters: []
  /widgets/:
    get:
      security:
        - JWT: []
      operationId: widgets_list
      description: ''
      summary: "Get list of current user's widgets"
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/WidgetList'
      tags:
        - widgets
    post:
      security:
        - JWT: []
      operationId: widgets_create
      description: ''
      summary: "Create widget"
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/WidgetCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/WidgetCreate'
      tags:
        - widgets
    parameters: []
  /widgets/{id}/:
    delete:
      security:
        - JWT: []
      operationId: widgets_delete
      description: ''
      summary: "Delete widget"
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - widgets
    parameters:
      - name: id
        in: path
        required: true
        type: string
definitions:
  TransactionCategoryList:
    required:
      - category_type
      - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
        minimum: 1
      category_type:
        title: "\u0422\u0438\u043F \u043A\u0430\u0442\u0435\u0433\u043E\u0440\u0438\
          \u0438"
        type: string
        enum:
          - inc
          - exp
      name:
        title: "\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435 \u043A\u0430\u0442\
          \u0435\u0433\u043E\u0440\u0438\u0438"
        type: string
        maxLength: 100
        minLength: 1
  TransactionCategoryCreate:
    required:
      - category_type
      - name
    type: object
    properties:
      category_type:
        title: "\u0422\u0438\u043F \u043A\u0430\u0442\u0435\u0433\u043E\u0440\u0438\
          \u0438"
        type: string
        enum:
          - inc
          - exp
      name:
        title: "\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435 \u043A\u0430\u0442\
          \u0435\u0433\u043E\u0440\u0438\u0438"
        type: string
        maxLength: 100
        minLength: 1
  TransactionCategorySums:
    required:
      - category_type
      - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
        minimum: 1
      category_type:
        title: "\u0422\u0438\u043F \u043A\u0430\u0442\u0435\u0433\u043E\u0440\u0438\
          \u0438"
        type: string
        enum:
          - inc
          - exp
      name:
        title: "\u041D\u0430\u0437\u0432\u0430\u043D\u0438\u0435 \u043A\u0430\u0442\
          \u0435\u0433\u043E\u0440\u0438\u0438"
        type: string
        maxLength: 100
        minLength: 1
      total_amount:
        title: Total amount
        type: string
        readOnly: true
  TransactionList:
    required:
      - category
      - amount
      - date
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
        minimum: 1
      category_type:
        title: Category type
        type: string
        readOnly: true
      category:
        title: "\u041A\u0430\u0442\u0435\u0433\u043E\u0440\u0438\u044F"
        type: integer
        format: TransactionCategory
        minimum: 1
      amount:
        title: "\u0421\u0443\u043C\u043C\u0430"
        type: number
      date:
        title: "\u0414\u0430\u0442\u0430 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\
          \u0438"
        type: string
        format: date
  Transaction:
    required:
      - category
      - amount
      - date
    type: object
    properties:
      category:
        title: "\u041A\u0430\u0442\u0435\u0433\u043E\u0440\u0438\u044F"
        type: integer
        format: TransactionCategory
        minimum: 1
      amount:
        title: "\u0421\u0443\u043C\u043C\u0430"
        type: number
      date:
        title: "\u0414\u0430\u0442\u0430 \u043E\u043F\u0435\u0440\u0430\u0446\u0438\
          \u0438"
        type: string
        format: date
  TransactionGlobal:
    type: object
    properties:
      total_amount:
        title: Total amount
        type: string
        readOnly: true
      category_type:
        title: Category type
        type: string
        readOnly: true
  TokenObtainPair:
    required:
      - email
      - password
    type: object
    properties:
      email:
        title: Email
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  TokenRefresh:
    required:
      - refresh
    type: object
    properties:
      refresh:
        title: Refresh
        type: string
        minLength: 1
      access:
        title: Access
        type: string
        readOnly: true
  UserInfo:
    required:
      - username
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
        minimum: 1
      username:
        title: "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\
          \u0442\u0435\u043B\u044F"
        description: "\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u044C\u043D\
          \u043E\u0435 \u043F\u043E\u043B\u0435. \u041D\u0435 \u0431\u043E\u043B\u0435\
          \u0435 150 \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432. \u0422\u043E\
          \u043B\u044C\u043A\u043E \u0431\u0443\u043A\u0432\u044B, \u0446\u0438\u0444\
          \u0440\u044B \u0438 \u0441\u0438\u043C\u0432\u043E\u043B\u044B @/./+/-/_."
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
  User:
    required:
      - username
      - email
      - password
    type: object
    properties:
      username:
        title: "\u0418\u043C\u044F \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\
          \u0442\u0435\u043B\u044F"
        description: "\u041E\u0431\u044F\u0437\u0430\u0442\u0435\u043B\u044C\u043D\
          \u043E\u0435 \u043F\u043E\u043B\u0435. \u041D\u0435 \u0431\u043E\u043B\u0435\
          \u0435 150 \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432. \u0422\u043E\
          \u043B\u044C\u043A\u043E \u0431\u0443\u043A\u0432\u044B, \u0446\u0438\u0444\
          \u0440\u044B \u0438 \u0441\u0438\u043C\u0432\u043E\u043B\u044B @/./+/-/_."
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        maxLength: 255
        minLength: 1
      password:
        title: "\u041F\u0430\u0440\u043E\u043B\u044C"
        type: string
        maxLength: 128
        minLength: 1
  WidgetList:
    required:
      - category
      - money_limit
      - validity
      - criterion
      - color
      - created_at
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
        minimum: 1
      category:
        title: "\u041A\u0430\u0442\u0435\u0433\u043E\u0440\u0438\u044F"
        type: integer
        format: TransactionCategory
        minimum: 1
      money_limit:
        title: "\u041B\u0438\u043C\u0438\u0442 \u0441\u0443\u043C\u043C\u044B"
        type: number
      validity:
        title: "\u0421\u0440\u043E\u043A \u0434\u0435\u0439\u0441\u0442\u0432\u0438\
          \u044F"
        type: string
        format: delta-time
        enum:
          - 1 day, 0:00:00
          - 7 days, 0:00:00
          - 30 days, 0:00:00
      criterion:
        title: "\u041A\u0440\u0438\u0442\u0435\u0440\u0438\u0439"
        type: string
        enum:
          - gt
          - lt
      color:
        title: "\u0426\u0432\u0435\u0442 (hex)"
        type: string
        maxLength: 7
        minLength: 7
        pattern: '^#\d{6}$'
      created_at:
        title: "\u0414\u0430\u0442\u0430 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\
          \u044F"
        type: string
        format: date-time
      amount_spent:
        title: Amount spent
        type: string
        readOnly: true
      date_end:
        title: Date end
        type: string
        readOnly: true
  WidgetCreate:
    required:
      - category
      - money_limit
      - validity
      - criterion
      - color
      - created_at
    type: object
    properties:
      category:
        title: "\u041A\u0430\u0442\u0435\u0433\u043E\u0440\u0438\u044F"
        type: integer
        format: TransactionCategory
        minimum: 1
      money_limit:
        title: "\u041B\u0438\u043C\u0438\u0442 \u0441\u0443\u043C\u043C\u044B"
        type: number
      validity:
        title: "\u0421\u0440\u043E\u043A \u0434\u0435\u0439\u0441\u0442\u0432\u0438\
          \u044F"
        type: string
        format: delta-time
        enum:
          - 1 day, 0:00:00
          - 7 days, 0:00:00
          - 30 days, 0:00:00
      criterion:
        title: "\u041A\u0440\u0438\u0442\u0435\u0440\u0438\u0439"
        type: string
        enum:
          - gt
          - lt
      color:
        title: "\u0426\u0432\u0435\u0442 (hex)"
        type: string
        maxLength: 7
        minLength: 7
        pattern: '^#\d{6}$'
      created_at:
        title: "\u0414\u0430\u0442\u0430 \u0441\u043E\u0437\u0434\u0430\u043D\u0438\
          \u044F"
        type: string
        format: date-time